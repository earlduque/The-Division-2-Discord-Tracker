<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>Get records</name>
        <run_as display_value="Earl Duque">d4164bc0134ed3001f2f53173244b0d9</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period>1970-01-01 02:00:00</run_period>
        <run_start>2019-03-19 17:25:32</run_start>
        <run_time>1970-01-01 16:30:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[// var rm = new sn_ws.RESTMessageV2();
// rm.setHttpMethod('GET');
// rm.setLogLevel('all');
// rm.setEndpoint(gs.getProperty('apify.endpoint.division2'));
// var response = rm.execute();
// var answer = JSON.parse(response.getBody());
var records_gr = new GlideRecord('x_snc_web_scraper_task');
records_gr.addQuery('short_description', 'Division GG 2 Tracking');
records_gr.orderByDesc('number');
records_gr.setLimit(1);
records_gr.query();
// gs.info('division: ' + records_gr.getRowCount() + '\n' + records_gr.getValue('result').toString());
if (records_gr.next()){
	var answer = JSON.parse(records_gr.getValue('result').toString());
	
	var result_log = '';
	var discord_message = '';

	for (var result in answer){
		var platformSlug = answer[result].route.params.platformSlug;
		var platformUserIdentifier = answer[result].route.params.platformUserIdentifier.toLowerCase();
		//gs.info('division: ' + platformSlug + ' ' + platformUserIdentifier);
		if (!platformUserIdentifier || answer[result]['division-2/stats']['customPlayers']['division-2|'+ platformSlug +'|' + platformUserIdentifier] == null) continue;
		var id = answer[result]['division-2/stats']['customPlayers']['division-2|'+ platformSlug +'|' + platformUserIdentifier]['id'];
		var stats = answer[result]['division-2/stats']['customPlayers']['division-2|'+ platformSlug +'|' + platformUserIdentifier]['stats'];
		var gr = new GlideRecord('x_snc_the_division_record');
		gr.addQuery('pid', id);
		gr.addQuery('name', platformUserIdentifier);
		gr.addQuery('kills_pvp', stats.killsPvP.value);
		gr.addQuery('kills_npc', stats.killsNpc.value);
		gr.addQuery('level_pve', stats.highestPlayerLevel.value);
		gr.addQuery('level_dz', stats.rankDZ.value);
		gr.addQuery('gearscore', stats.latestGearScore.value);
		gr.addQuery('items_looted', stats.itemsLooted.value);
		gr.query();
		if (gr.next()){
			result_log += 'No new stats found for ' + platformUserIdentifier + '\n';
		} else {
			var gr2 = new GlideRecord('x_snc_the_division_record');
			gr2.addQuery('name', platformUserIdentifier);
			gr2.addQuery('latest', 'true');
			gr2.orderBy('number');
			gr2.query();
			if (gr2.next()){ 
				var kills_pvp = parseInt(gr2.getValue('kills_pvp'));
				var kills_npc = parseInt(gr2.getValue('kills_npc'));
				var level_pve = parseInt(gr2.getValue('level_pve'));
				var level_dz = parseInt(gr2.getValue('level_dz'));
				var gearscore = parseInt(gr2.getValue('gearscore'));
				var items_looted = parseInt(gr2.getValue('items_looted'));

				gr2.setValue('latest','false');
				gr2.update();	

			}
			gr.initialize();
			gr.setValue('latest','true');
			gr.setValue('pid', platformSlug);
			gr.setValue('name', platformUserIdentifier);
			gr.setValue('kills_pvp', stats.killsPvP.value);
			gr.setValue('kills_npc', stats.killsNpc.value);
			if(parseInt(stats.highestPlayerLevel.value) < parseInt(level_pve)) gr.setValue('level_pve', level_pve);
			else gr.setValue('level_pve', stats.highestPlayerLevel.value);
			if(parseInt(stats.rankDZ.value) < parseInt(level_dz)) gr.setValue('level_dz', level_dz);
			else gr.setValue('level_dz', stats.rankDZ.value);
			if(parseInt(stats.latestGearScore.value) < parseInt(gearscore)) gr.setValue('gearscore', gearscore);
			else gr.setValue('gearscore', stats.latestGearScore.value);
			if(parseInt(stats.itemsLooted.value) < parseInt(items_looted)) gr.setValue('items_looted', items_looted);
			else gr.setValue('items_looted', stats.itemsLooted.value);
			var kills_pvp_diff = parseInt(stats.killsPvP.value) - ((typeof kills_pvp === 'undefined') ? 0 : kills_pvp);
			var kills_npc_diff = parseInt(stats.killsNpc.value) - ((typeof kills_npc === 'undefined') ? 0 : kills_npc);
			var level_pve_diff = parseInt(stats.highestPlayerLevel.value) - ((typeof level_pve === 'undefined') ? 0 : level_pve);
			var level_dz_diff = parseInt(stats.rankDZ.value) - ((typeof level_dz === 'undefined') ? 0 : level_dz);
			var gearscore_diff = parseInt(stats.latestGearScore.value) - ((typeof gearscore === 'undefined') ? 0 : gearscore);
			var items_looted_diff = parseInt(stats.itemsLooted.value) - ((typeof items_looted === 'undefined') ? 0 : items_looted);
			gr.setValue('kills_pvp_diff', kills_pvp_diff);
			gr.setValue('kills_npc_diff', kills_npc_diff);
			gr.setValue('level_pve_diff', level_pve_diff);
			gr.setValue('level_dz_diff', level_dz_diff);
			gr.setValue('gearscore_diff', gearscore_diff);
			gr.setValue('items_looted_diff', items_looted_diff);
			gr.insert();
			if (kills_pvp_diff > 0 || kills_npc_diff > 0 || level_pve_diff > 0 || level_dz_diff > 0 || gearscore_diff > 0 || items_looted_diff > 0){
				discord_message += '**' + platformUserIdentifier + '**: ';
				var things = [];
				if (kills_npc_diff > 0) things.push('Has defeated ' + kills_npc_diff + ' more enemy faction units.');
				if (kills_pvp_diff == 1) things.push('Has eliminated another agent.');
				else if (kills_pvp_diff > 0) things.push('Has eliminated ' + kills_pvp_diff + ' more agents.');
				if (gearscore_diff > 0 && stats.latestGearScore.value != 0) things.push('Is now gearscore ' + stats.latestGearScore.value + '.');
				if (items_looted_diff > 0 && stats.itemsLooted.value != 0) things.push('Has looted ' + items_looted_diff + ' more items.');
				if (level_pve_diff > 0 && stats.highestPlayerLevel.value == 30) things.push('**Is now level 30 in the light zone.**');
				else if (level_pve_diff > 0) things.push('Is now LZ level ' + stats.highestPlayerLevel.value + '.');
				if (level_dz_diff > 0 && stats.rankDZ.value == 99) things.push('**Is now level 99 in the dark zone.**');
				else if (level_dz_diff > 0) things.push('Is now DZ level ' + stats.rankDZ.value + '.');
				if (things.length > 1) things.splice(things.length-1, 0, 'and');
				discord_message += things.join(' ') + '\n';
				result_log += 'Stats updated for ' + platformUserIdentifier + '\n';
			} else {
				result_log += 'No new stats found for ' + platformUserIdentifier + '\n';
			}

		}
	}

	if (discord_message != ''){
		var rm = new sn_ws.RESTMessageV2();
		rm.setHttpMethod('POST');
		rm.setLogLevel('all');
		rm.setEndpoint('https://discordapp.com/api/channels/546047820940050463/messages'); //live
// 		rm.setEndpoint('https://discordapp.com/api/channels/556159575674322961/messages'); //dev
		rm.setRequestHeader('Content-Type', 'application/json');
		rm.setRequestHeader('Authorization', gs.getProperty('discord.token'));
		rm.setRequestHeader('User-Agent', 'ServiceNow');
		var rmbody = {
			"content": "Agents are on the move.",
			"tts": false,
			"embed": {
				"title": "Progress update",
				"description": discord_message
			}
		};
		//rm.setStringParameter(rmbody);
		rm.setRequestBody(JSON.stringify(rmbody));
		var response = rm.execute();
		var answer = response.getBody();
// 		gs.info('division: ' + (answer));
	}

	gs.info('division: \n' + result_log);
}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin-eduque</sys_created_by>
        <sys_created_on>2019-03-19 17:27:00</sys_created_on>
        <sys_id>ef378ce513dc7f401f2f53173244b091</sys_id>
        <sys_mod_count>53</sys_mod_count>
        <sys_name>Get records</sys_name>
        <sys_package display_value="The Division 2 Discord Tracker" source="x_snc_the_division">733ed55c1354fb401f2f53173244b06c</sys_package>
        <sys_policy/>
        <sys_scope display_value="The Division 2 Discord Tracker">733ed55c1354fb401f2f53173244b06c</sys_scope>
        <sys_update_name>sysauto_script_ef378ce513dc7f401f2f53173244b091</sys_update_name>
        <sys_updated_by>admin-eduque</sys_updated_by>
        <sys_updated_on>2019-04-15 04:27:32</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
